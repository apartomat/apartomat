// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql

type ConfirmLoginResult interface {
	IsConfirmLoginResult()
}

type Error interface {
	IsError()
}

type LoginByEmailResult interface {
	IsLoginByEmailResult()
}

type UserProfileResult interface {
	IsUserProfileResult()
}

type CheckEmail struct {
	Email string `json:"email"`
}

func (CheckEmail) IsLoginByEmailResult() {}

type ExpiredToken struct {
	Message string `json:"message"`
}

func (ExpiredToken) IsConfirmLoginResult() {}
func (ExpiredToken) IsError()              {}

type Forbidden struct {
	Message string `json:"message"`
}

func (Forbidden) IsUserProfileResult() {}
func (Forbidden) IsError()             {}

type Gravatar struct {
	URL string `json:"url"`
}

type InvalidEmail struct {
	Message string `json:"message"`
}

func (InvalidEmail) IsLoginByEmailResult() {}
func (InvalidEmail) IsError()              {}

type InvalidToken struct {
	Message string `json:"message"`
}

func (InvalidToken) IsConfirmLoginResult() {}
func (InvalidToken) IsError()              {}

type LoginConfirmed struct {
	Token string `json:"token"`
}

func (LoginConfirmed) IsConfirmLoginResult() {}

type Product struct {
	Name        string `json:"name"`
	Description string `json:"description"`
	Image       string `json:"image"`
}

type ServerError struct {
	Message string `json:"message"`
}

func (ServerError) IsError()              {}
func (ServerError) IsUserProfileResult()  {}
func (ServerError) IsLoginByEmailResult() {}
func (ServerError) IsConfirmLoginResult() {}

type ShoppingList struct {
	FindProductOnPage *Product `json:"findProductOnPage"`
}

type UserProfile struct {
	ID               int        `json:"id"`
	Email            string     `json:"email"`
	Gravatar         *Gravatar  `json:"gravatar"`
	DefaultWorkspace *Workspace `json:"defaultWorkspace"`
}

func (UserProfile) IsUserProfileResult() {}

type Workspace struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

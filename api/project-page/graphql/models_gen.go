// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql

type Error interface {
	IsError()
	GetMessage() string
}

type ProjectPageAlbumResult interface {
	IsProjectPageAlbumResult()
}

type ProjectPageHouseResult interface {
	IsProjectPageHouseResult()
}

type ProjectPageResult interface {
	IsProjectPageResult()
}

type ProjectPageVisualizationsListResult interface {
	IsProjectPageVisualizationsListResult()
}

type ProjectPageVisualizationsTotalResult interface {
	IsProjectPageVisualizationsTotalResult()
}

type VisualizationFileResult interface {
	IsVisualizationFileResult()
}

type VisualizationRoomResult interface {
	IsVisualizationRoomResult()
}

type Album struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

func (Album) IsProjectPageAlbumResult() {}

type Forbidden struct {
	Message string `json:"message"`
}

func (Forbidden) IsProjectPageResult() {}

func (Forbidden) IsProjectPageHouseResult() {}

func (Forbidden) IsProjectPageVisualizationsListResult() {}

func (Forbidden) IsProjectPageVisualizationsTotalResult() {}

func (Forbidden) IsVisualizationFileResult() {}

func (Forbidden) IsVisualizationRoomResult() {}

func (Forbidden) IsProjectPageAlbumResult() {}

func (Forbidden) IsError()                {}
func (this Forbidden) GetMessage() string { return this.Message }

type House struct {
	ID             string `json:"id"`
	City           string `json:"city"`
	Address        string `json:"address"`
	HousingComplex string `json:"housingComplex"`
}

func (House) IsProjectPageHouseResult() {}

type NotFound struct {
	Message string `json:"message"`
}

func (NotFound) IsProjectPageResult() {}

func (NotFound) IsProjectPageHouseResult() {}

func (NotFound) IsVisualizationFileResult() {}

func (NotFound) IsVisualizationRoomResult() {}

func (NotFound) IsProjectPageAlbumResult() {}

func (NotFound) IsError()                {}
func (this NotFound) GetMessage() string { return this.Message }

type ProjectPage struct {
	ID             string                     `json:"id"`
	Title          string                     `json:"title"`
	Description    string                     `json:"description"`
	House          ProjectPageHouseResult     `json:"house"`
	Visualizations *ProjectPageVisualizations `json:"visualizations"`
	Album          ProjectPageAlbumResult     `json:"album"`
}

func (ProjectPage) IsProjectPageResult() {}

type ProjectPageVisualizations struct {
	List  ProjectPageVisualizationsListResult  `json:"list"`
	Total ProjectPageVisualizationsTotalResult `json:"total"`
}

type ProjectPageVisualizationsFilter struct {
	RoomID *StringFilter `json:"roomId,omitempty"`
}

type Query struct {
}

type Room struct {
	ID     string   `json:"id"`
	Name   string   `json:"name"`
	Square *float64 `json:"square,omitempty"`
	Level  *int     `json:"level,omitempty"`
}

func (Room) IsVisualizationRoomResult() {}

type ServerError struct {
	Message string `json:"message"`
}

func (ServerError) IsProjectPageResult() {}

func (ServerError) IsProjectPageHouseResult() {}

func (ServerError) IsProjectPageVisualizationsListResult() {}

func (ServerError) IsProjectPageVisualizationsTotalResult() {}

func (ServerError) IsVisualizationFileResult() {}

func (ServerError) IsVisualizationRoomResult() {}

func (ServerError) IsProjectPageAlbumResult() {}

func (ServerError) IsError()                {}
func (this ServerError) GetMessage() string { return this.Message }

type StringFilter struct {
	Eq []string `json:"eq,omitempty"`
}

type Unknown struct {
	Message string `json:"message"`
}

func (Unknown) IsError()                {}
func (this Unknown) GetMessage() string { return this.Message }

type Visualization struct {
	ID          string                  `json:"id"`
	Name        string                  `json:"name"`
	Description string                  `json:"description"`
	File        VisualizationFileResult `json:"file"`
	Room        VisualizationRoomResult `json:"room"`
}

type VisualizationFile struct {
	ID       string `json:"id"`
	URL      string `json:"url"`
	MimeType string `json:"mimeType"`
}

func (VisualizationFile) IsVisualizationFileResult() {}

type VisualizationsList struct {
	Items []*Visualization `json:"items"`
}

func (VisualizationsList) IsProjectPageVisualizationsListResult() {}

type VisualizationsTotal struct {
	Total int `json:"total"`
}

func (VisualizationsTotal) IsProjectPageVisualizationsTotalResult() {}

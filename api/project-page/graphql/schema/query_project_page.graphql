extend type Query {
    projectPage(id: String!): ProjectPageResult!
}

union ProjectPageResult = ProjectPage | NotFound | Forbidden | ServerError

type ProjectPage {
    id: String!
    title: String!
    description: String!
    house: ProjectPageHouseResult! @goField(forceResolver: true)
    visualizations: ProjectPageVisualizations! @goField(forceResolver: true)
    album: ProjectPageAlbumResult! @goField(forceResolver: true)
}

union ProjectPageHouseResult = House | NotFound | Forbidden | ServerError

type House {
    id: String!
    city: String!
    address: String!
    housingComplex: String!
}

type ProjectPageVisualizations {
    list(filter: ProjectPageVisualizationsFilter! = {} limit: Int! = 10 offset: Int! = 0): ProjectPageVisualizationsListResult! @goField(forceResolver: true)
    total(filter: ProjectPageVisualizationsFilter! = {}): ProjectPageVisualizationsTotalResult! @goField(forceResolver: true)
}

input ProjectPageVisualizationsFilter {
    roomId: StringFilter
}

union ProjectPageVisualizationsListResult = VisualizationsList | Forbidden | ServerError

type VisualizationsList {
    items: [Visualization!]!
}

union ProjectPageVisualizationsTotalResult = VisualizationsTotal | Forbidden | ServerError

type VisualizationsTotal {
    total: Int!
}

type Visualization {
    id: String!
    name: String!
    description: String!
    file: VisualizationFileResult! @goField(forceResolver: true)
    room: VisualizationRoomResult! @goField(forceResolver: true)
}

union VisualizationFileResult = VisualizationFile | NotFound | Forbidden | ServerError

type VisualizationFile {
    id: String!
    url: Url!
    mimeType: String!
}

union VisualizationRoomResult = Room | NotFound | Forbidden | ServerError

type Room {
    id: String!
    name: String!
    square: Float
    level: Int
}

union ProjectPageAlbumResult = Album | Forbidden | NotFound | ServerError

type Album {
    id: String!
    name: String!
    url: String!
    size: Int!
}
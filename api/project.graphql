union ProjectResult = Project | NotFound | Forbidden | ServerError

type Project {
    id: Int!
    title: String!
    startAt: Time
    endAt: Time
    files: ProjectFiles!
}

type ProjectFiles {
    list(filter: ProjectFilesListFilter! = {} limit: Int! = 10 offset: Int! = 0): ProjectFilesListResult!
    total: ProjectFilesTotalResult!
}

input ProjectFilesListFilter {
    type: [ProjectFileType!]
}

enum ProjectFileType {
    NONE
    IMAGE
}

union ProjectFilesListResult = ProjectFilesList | Forbidden | ServerError

type ProjectFilesList {
    items: [ProjectFile!]!
}

union ProjectFilesTotalResult = ProjectFilesTotal | Forbidden | ServerError

type ProjectFilesTotal {
    total: Int!
}

union ProjectFilesResult = ProjectFiles | Forbidden | ServerError

type ProjectFile {
    id: Int!
    name: String!
    url: Url!
    type: ProjectFileType!
    mimeType: String!
}